// Copyright 2007 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

***REMOVED***
***REMOVED*** @fileoverview Factory class to create a rich autocomplete that will match
***REMOVED*** from an array of data provided via ajax.  The server returns a complex data
***REMOVED*** structure that is used with client-side javascript functions to render the
***REMOVED*** results.
***REMOVED***
***REMOVED*** The server sends a list of the form:
***REMOVED***   [["type1", {...}, {...}, ...], ["type2", {...}, {...}, ...], ...]
***REMOVED*** The first element of each sublist is a string designating the type of the
***REMOVED*** hashes in the sublist, each of which represents one match.  The type string
***REMOVED*** must be the name of a function(item) which converts the hash into a rich
***REMOVED*** row that contains both a render(node, token) and a select(target) method.
***REMOVED*** The render method is called by the renderer when rendering the rich row,
***REMOVED*** and the select method is called by the RichInputHandler when the rich row is
***REMOVED*** selected.
***REMOVED***
***REMOVED*** @see ../../demos/autocompleterichremote.html
***REMOVED***

goog.provide('goog.ui.ac.RichRemote');

goog.require('goog.ui.ac.AutoComplete');
goog.require('goog.ui.ac.Remote');
goog.require('goog.ui.ac.Renderer');
goog.require('goog.ui.ac.RichInputHandler');
goog.require('goog.ui.ac.RichRemoteArrayMatcher');



***REMOVED***
***REMOVED*** Factory class to create a rich autocomplete widget that autocompletes an
***REMOVED*** inputbox or textarea from data provided via ajax.  The server returns a
***REMOVED*** complex data structure that is used with client-side javascript functions to
***REMOVED*** render the results.
***REMOVED*** @param {string} url The Uri which generates the auto complete matches.
***REMOVED*** @param {Element} input Input element or text area.
***REMOVED*** @param {boolean=} opt_multi Whether to allow multiple entries; defaults
***REMOVED***     to false.
***REMOVED*** @param {boolean=} opt_useSimilar Whether to use similar matches; e.g.
***REMOVED***     "gost" => "ghost".
***REMOVED***
***REMOVED*** @extends {goog.ui.ac.Remote}
***REMOVED***
goog.ui.ac.RichRemote = function(url, input, opt_multi, opt_useSimilar) {
  // Create a custom renderer that renders rich rows.  The renderer calls
  // row.render(node, token) for each row.
  var customRenderer = {***REMOVED***
  customRenderer.renderRow = function(row, token, node) {
    return row.data.render(node, token);
 ***REMOVED*****REMOVED***

 ***REMOVED*****REMOVED***
  ***REMOVED*** A standard renderer that uses a custom row renderer to display the
  ***REMOVED*** rich rows generated by this autocomplete widget.
  ***REMOVED*** @type {goog.ui.ac.Renderer}
  ***REMOVED*** @private
 ***REMOVED*****REMOVED***
  var renderer = new goog.ui.ac.Renderer(null, customRenderer);
  this.renderer_ = renderer;

 ***REMOVED*****REMOVED***
  ***REMOVED*** A remote matcher that parses rich results returned by the server.
  ***REMOVED*** @type {goog.ui.ac.RichRemoteArrayMatcher}
  ***REMOVED*** @private
 ***REMOVED*****REMOVED***
  var matcher = new goog.ui.ac.RichRemoteArrayMatcher(url,
      !opt_useSimilar);
  this.matcher_ = matcher;

 ***REMOVED*****REMOVED***
  ***REMOVED*** An input handler that calls select on a row when it is selected.
  ***REMOVED*** @type {goog.ui.ac.RichInputHandler}
  ***REMOVED*** @private
 ***REMOVED*****REMOVED***
  var inputhandler = new goog.ui.ac.RichInputHandler(null, null,
      !!opt_multi, 300);

  // Create the widget and connect it to the input handler.
  goog.ui.ac.AutoComplete.call(this, matcher, renderer, inputhandler);
  inputhandler.attachAutoComplete(this);
  inputhandler.attachInputs(input);
***REMOVED***
goog.inherits(goog.ui.ac.RichRemote, goog.ui.ac.Remote);


***REMOVED***
***REMOVED*** Set the filter that is called before the array matches are returned.
***REMOVED*** @param {Function} rowFilter A function(rows) that returns an array of rows as
***REMOVED***     a subset of the rows input array.
***REMOVED***
goog.ui.ac.RichRemote.prototype.setRowFilter = function(rowFilter) {
  this.matcher_.setRowFilter(rowFilter);
***REMOVED***
